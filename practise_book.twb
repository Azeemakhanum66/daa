<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0425.1340                               -->
<workbook original-version='18.1' source-build='2024.1.2 (20241.24.0425.1340)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Select a dimension' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <members />
      </column>
    </datasource>
    <datasource caption='Orders+ (Sample - Superstore (1))' inline='true' name='federated.1wh51210nnqsco183k9qo0hsv9cu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore (1)' name='excel-direct.135e4xm1d2dkod14zvy6j016j2uo'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Admin/OneDrive/Desktop/Data Set (4)/Data Set/Sample - Superstore (1).xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[Order ID]' />
              <expression op='[Returns1].[Order ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.135e4xm1d2dkod14zvy6j016j2uo' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='string' name='Country' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='integer' name='Postal Code' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Product ID' ordinal='13' />
              <column datatype='string' name='Category' ordinal='14' />
              <column datatype='string' name='Sub-Category' ordinal='15' />
              <column datatype='string' name='Product Name' ordinal='16' />
              <column datatype='real' name='Sales' ordinal='17' />
              <column datatype='integer' name='Quantity' ordinal='18' />
              <column datatype='real' name='Discount' ordinal='19' />
              <column datatype='real' name='Profit' ordinal='20' />
            </columns>
          </relation>
          <relation connection='excel-direct.135e4xm1d2dkod14zvy6j016j2uo' name='Returns1' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Orders].[Order ID]' />
                <expression op='[Returns1].[Order ID]' />
              </expression>
            </clause>
            <relation connection='excel-direct.135e4xm1d2dkod14zvy6j016j2uo' name='Orders' table='[Orders$]' type='table'>
              <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                <column datatype='integer' name='Row ID' ordinal='0' />
                <column datatype='string' name='Order ID' ordinal='1' />
                <column datatype='date' name='Order Date' ordinal='2' />
                <column datatype='date' name='Ship Date' ordinal='3' />
                <column datatype='string' name='Ship Mode' ordinal='4' />
                <column datatype='string' name='Customer ID' ordinal='5' />
                <column datatype='string' name='Customer Name' ordinal='6' />
                <column datatype='string' name='Segment' ordinal='7' />
                <column datatype='string' name='Country' ordinal='8' />
                <column datatype='string' name='City' ordinal='9' />
                <column datatype='string' name='State' ordinal='10' />
                <column datatype='integer' name='Postal Code' ordinal='11' />
                <column datatype='string' name='Region' ordinal='12' />
                <column datatype='string' name='Product ID' ordinal='13' />
                <column datatype='string' name='Category' ordinal='14' />
                <column datatype='string' name='Sub-Category' ordinal='15' />
                <column datatype='string' name='Product Name' ordinal='16' />
                <column datatype='real' name='Sales' ordinal='17' />
                <column datatype='integer' name='Quantity' ordinal='18' />
                <column datatype='real' name='Discount' ordinal='19' />
                <column datatype='real' name='Profit' ordinal='20' />
              </columns>
            </relation>
            <relation connection='excel-direct.135e4xm1d2dkod14zvy6j016j2uo' name='Returns1' table='[Returns$]' type='table'>
              <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
                <column datatype='string' name='Returned' ordinal='0' />
                <column datatype='string' name='Order ID' ordinal='1' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.135e4xm1d2dkod14zvy6j016j2uo' name='People' table='[People$]' type='table'>
            <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.135e4xm1d2dkod14zvy6j016j2uo' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID (Returns1)]' value='[Returns1].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Person]' value='[People].[Person]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (People)]' value='[People].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned (Returns1)]' value='[Returns1].[Returned]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B297:no:A1:B297:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B5:no:A1:B5:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B297:no:A1:B297:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_49F9F5DA7CD944129B7696F4F31BDFFD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_49F9F5DA7CD944129B7696F4F31BDFFD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_49F9F5DA7CD944129B7696F4F31BDFFD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_49F9F5DA7CD944129B7696F4F31BDFFD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_49F9F5DA7CD944129B7696F4F31BDFFD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_49F9F5DA7CD944129B7696F4F31BDFFD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_49F9F5DA7CD944129B7696F4F31BDFFD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_49F9F5DA7CD944129B7696F4F31BDFFD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_49F9F5DA7CD944129B7696F4F31BDFFD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_49F9F5DA7CD944129B7696F4F31BDFFD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_49F9F5DA7CD944129B7696F4F31BDFFD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_49F9F5DA7CD944129B7696F4F31BDFFD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_49F9F5DA7CD944129B7696F4F31BDFFD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_49F9F5DA7CD944129B7696F4F31BDFFD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_49F9F5DA7CD944129B7696F4F31BDFFD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_49F9F5DA7CD944129B7696F4F31BDFFD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_49F9F5DA7CD944129B7696F4F31BDFFD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_49F9F5DA7CD944129B7696F4F31BDFFD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_49F9F5DA7CD944129B7696F4F31BDFFD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_49F9F5DA7CD944129B7696F4F31BDFFD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_49F9F5DA7CD944129B7696F4F31BDFFD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned (Returns1)]</local-name>
            <parent-name>[Returns1]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_49F9F5DA7CD944129B7696F4F31BDFFD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns1)]</local-name>
            <parent-name>[Returns1]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_49F9F5DA7CD944129B7696F4F31BDFFD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_0EEC559800BF445ABA4C1E29B33AA255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (People)]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_0EEC559800BF445ABA4C1E29B33AA255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_B6167251EF1545269CEDA5303FA037B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_B6167251EF1545269CEDA5303FA037B6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Count Distinct orders' datatype='integer' name='[Calculation_1104507854509199362]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [Customer Name]:COUNTD([Order ID])}' />
      </column>
      <column caption='count distinct order' datatype='integer' name='[Calculation_228839202009874432]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Customer Name] : COUNTD([Order ID]) }' />
      </column>
      <column caption='Dimension' datatype='string' name='[Calculation_502995829009547264]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1] WHEN  &apos;Category&apos; THEN [Category] WHEN &apos;Sub-Category&apos; THEN[Sub-Category] ELSE [Segment] END' />
      </column>
      <column caption='MEASURE' datatype='real' name='[Calculation_502995829012578305]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 2]=&apos;Total Sales&apos; THEN SUM([Sales])&#13;&#10;ELSEIF [Parameters].[Parameter 2]=&apos;Avg. Profit&apos; THEN AVG([Profit])&#13;&#10;ELSEIF [Parameters].[Parameter 2]=&apos;Total Discount&apos; THEN SUM([Discount])&#13;&#10;ELSE COUNT([Quantity])&#13;&#10;END' />
      </column>
      <column caption='Average sales per customer' datatype='real' name='[Calculation_502995829043113986]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG({INCLUDE [Customer Name]:SUM([Sales]) })' />
      </column>
      <column caption='Sales goals' datatype='real' name='[Calculation_502995829043597315]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if MIN([States with 100+ customers])= TRUE THEN SUM([Sales]) &#13;&#10;ELSE 100* [Calculation_502995829043113986]&#13;&#10;END' />
      </column>
      <column caption='Emerging or Developing State' datatype='string' name='[Calculation_502995829044965380]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF COUNTD([Customer Name])&gt;=100 THEN &quot;Developing state&quot; ELSE &#13;&#10;&quot;Emerging state&quot;&#13;&#10;END' />
      </column>
      <column caption='Profit Ratio' datatype='real' name='[Calculation_502995829055029254]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
      </column>
      <column caption='Count Distinct Orders' datatype='integer' name='[Calculation_502995829057662983]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [Customer Name]:COUNTD([Order ID])}' />
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_502995829057957896]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column datatype='date' fiscal-year-start='7' name='[Order Date]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' default-format='c&quot;₹&quot;#,##0,.00K;&quot;₹&quot;-#,##0,.00K' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
          <bin default-name='false' value='&quot;paper products&quot;'>
            <value>&quot;Envelopes&quot;</value>
            <value>&quot;Labels&quot;</value>
            <value>&quot;Paper&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_49F9F5DA7CD944129B7696F4F31BDFFD]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='People' datatype='table' name='[__tableau_internal_object_id__].[People_0EEC559800BF445ABA4C1E29B33AA255]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Returns' datatype='table' name='[__tableau_internal_object_id__].[Returns_B6167251EF1545269CEDA5303FA037B6]' role='measure' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      <group caption='Top and Bottom' delimiter=',' name='[Set 1]' name-style='unqualified'>
        <groupfilter function='union'>
          <groupfilter field='[bottom 2 subcategories]' function='reference' />
          <groupfilter field='[Top 2 subcategories]' function='reference' />
        </groupfilter>
      </group>
      <group caption='States with 100+ customers' name='[States with 100+ customers]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='COUNT([Customer Name]) &gt;= 100' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[Customer Name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <group caption='Top 2 subcategories' name='[Top 2 subcategories]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='2' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Sub-Category (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='bottom 2 subcategories' name='[bottom 2 subcategories]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='2' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Sub-Category (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='states with 100+ customers' name='[states with 100+ customers]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='100' end='top' function='end' units='records' user:ui-marker='end'>
          <groupfilter direction='DESC' expression='COUNT([Customer Name])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:Order Date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2014</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2018</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2017</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2016</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2015</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_49F9F5DA7CD944129B7696F4F31BDFFD'>
            <properties context=''>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[Orders].[Order ID]' />
                    <expression op='[Returns1].[Order ID]' />
                  </expression>
                </clause>
                <relation connection='excel-direct.135e4xm1d2dkod14zvy6j016j2uo' name='Orders' table='[Orders$]' type='table'>
                  <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                    <column datatype='integer' name='Row ID' ordinal='0' />
                    <column datatype='string' name='Order ID' ordinal='1' />
                    <column datatype='date' name='Order Date' ordinal='2' />
                    <column datatype='date' name='Ship Date' ordinal='3' />
                    <column datatype='string' name='Ship Mode' ordinal='4' />
                    <column datatype='string' name='Customer ID' ordinal='5' />
                    <column datatype='string' name='Customer Name' ordinal='6' />
                    <column datatype='string' name='Segment' ordinal='7' />
                    <column datatype='string' name='Country' ordinal='8' />
                    <column datatype='string' name='City' ordinal='9' />
                    <column datatype='string' name='State' ordinal='10' />
                    <column datatype='integer' name='Postal Code' ordinal='11' />
                    <column datatype='string' name='Region' ordinal='12' />
                    <column datatype='string' name='Product ID' ordinal='13' />
                    <column datatype='string' name='Category' ordinal='14' />
                    <column datatype='string' name='Sub-Category' ordinal='15' />
                    <column datatype='string' name='Product Name' ordinal='16' />
                    <column datatype='real' name='Sales' ordinal='17' />
                    <column datatype='integer' name='Quantity' ordinal='18' />
                    <column datatype='real' name='Discount' ordinal='19' />
                    <column datatype='real' name='Profit' ordinal='20' />
                  </columns>
                </relation>
                <relation connection='excel-direct.135e4xm1d2dkod14zvy6j016j2uo' name='Returns1' table='[Returns$]' type='table'>
                  <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
                    <column datatype='string' name='Returned' ordinal='0' />
                    <column datatype='string' name='Order ID' ordinal='1' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
          <object caption='People' id='People_0EEC559800BF445ABA4C1E29B33AA255'>
            <properties context=''>
              <relation connection='excel-direct.135e4xm1d2dkod14zvy6j016j2uo' name='People' table='[People$]' type='table'>
                <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
                  <column datatype='string' name='Person' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Returns' id='Returns_B6167251EF1545269CEDA5303FA037B6'>
            <properties context=''>
              <relation connection='excel-direct.135e4xm1d2dkod14zvy6j016j2uo' name='Returns' table='[Returns$]' type='table'>
                <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
                  <column datatype='string' name='Returned' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Region]' />
              <expression op='[Region (People)]' />
            </expression>
            <first-end-point object-id='Orders_49F9F5DA7CD944129B7696F4F31BDFFD' />
            <second-end-point object-id='People_0EEC559800BF445ABA4C1E29B33AA255' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Order ID]' />
              <expression op='[Order ID (Returns)]' />
            </expression>
            <first-end-point object-id='Orders_49F9F5DA7CD944129B7696F4F31BDFFD' />
            <second-end-point object-id='Returns_B6167251EF1545269CEDA5303FA037B6' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Pivot)' inline='true' name='federated.1w7wvbi19rpwnm18s4qko15wrr9o' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Pivot' name='excel-direct.1b4ev500m6sn8y12voccn1q6uqj5'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Admin/OneDrive/Desktop/Data Set (4)/Data Set/Pivot.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='string' name='Pivot Field Names' />
            <column datatype='integer' name='Pivot Field Values' />
          </columns>
          <tag name='Pivot Field Names'>
            <value name='[Female]' />
            <value name='[Male]' />
          </tag>
          <groups>
            <group name='Pivot Field Values'>
              <field name='[Sheet1].[Female]' />
              <field name='[Sheet1].[Male]' />
            </group>
          </groups>
          <relation connection='excel-direct.1b4ev500m6sn8y12voccn1q6uqj5' name='Sheet1' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A3:D11:no:A3:D11:0' header='yes' outcome='6'>
              <column datatype='string' name='Age Group' ordinal='0' />
              <column datatype='date' name='Month' ordinal='1' />
              <column datatype='integer' name='Male' ordinal='2' />
              <column datatype='integer' name='Female' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='string' name='Pivot Field Names' />
            <column datatype='integer' name='Pivot Field Values' />
          </columns>
          <tag name='Pivot Field Names'>
            <value name='[Female]' />
            <value name='[Male]' />
          </tag>
          <groups>
            <group name='Pivot Field Values'>
              <field name='[Sheet1].[Female]' />
              <field name='[Sheet1].[Male]' />
            </group>
          </groups>
          <relation connection='excel-direct.1b4ev500m6sn8y12voccn1q6uqj5' name='Sheet1' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A3:D11:no:A3:D11:0' header='yes' outcome='6'>
              <column datatype='string' name='Age Group' ordinal='0' />
              <column datatype='date' name='Month' ordinal='1' />
              <column datatype='integer' name='Male' ordinal='2' />
              <column datatype='integer' name='Female' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A3:D11:no:A3:D11:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Age Group]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Age Group</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C5210E24C250459C8827E0F47199C659]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C5210E24C250459C8827E0F47199C659]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Names</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pivot Field Names]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Names</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C5210E24C250459C8827E0F47199C659]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Values</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pivot Field Values]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Values</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C5210E24C250459C8827E0F47199C659]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_C5210E24C250459C8827E0F47199C659]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_C5210E24C250459C8827E0F47199C659'>
            <properties context=''>
              <relation name='Pivot' type='pivot'>
                <columns>
                  <column datatype='string' name='Pivot Field Names' />
                  <column datatype='integer' name='Pivot Field Values' />
                </columns>
                <tag name='Pivot Field Names'>
                  <value name='[Female]' />
                  <value name='[Male]' />
                </tag>
                <groups>
                  <group name='Pivot Field Values'>
                    <field name='[Sheet1].[Female]' />
                    <field name='[Sheet1].[Male]' />
                  </group>
                </groups>
                <relation connection='excel-direct.1b4ev500m6sn8y12voccn1q6uqj5' name='Sheet1' table='[Sheet1$]' type='table'>
                  <columns gridOrigin='A3:D11:no:A3:D11:0' header='yes' outcome='6'>
                    <column datatype='string' name='Age Group' ordinal='0' />
                    <column datatype='date' name='Month' ordinal='1' />
                    <column datatype='integer' name='Male' ordinal='2' />
                    <column datatype='integer' name='Female' ordinal='3' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Orders (Sample - Superstore (1))' inline='true' name='federated.0hdrlkf13vkshv1ciiu2202jq7ma' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore (1)' name='excel-direct.01riyle0pygps91c3vo0k1cxlf5o'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Admin/OneDrive/Desktop/Data Set (4)/Data Set/Sample - Superstore (1).xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.01riyle0pygps91c3vo0k1cxlf5o' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.01riyle0pygps91c3vo0k1cxlf5o' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='string' name='Country' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='integer' name='Postal Code' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Product ID' ordinal='13' />
              <column datatype='string' name='Category' ordinal='14' />
              <column datatype='string' name='Sub-Category' ordinal='15' />
              <column datatype='string' name='Product Name' ordinal='16' />
              <column datatype='real' name='Sales' ordinal='17' />
              <column datatype='integer' name='Quantity' ordinal='18' />
              <column datatype='real' name='Discount' ordinal='19' />
              <column datatype='real' name='Profit' ordinal='20' />
            </columns>
          </relation>
          <relation connection='excel-direct.01riyle0pygps91c3vo0k1cxlf5o' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B297:no:A1:B297:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_0F88647E9C324EA2948E3ED12B3F7A76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_0F88647E9C324EA2948E3ED12B3F7A76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_0F88647E9C324EA2948E3ED12B3F7A76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_0F88647E9C324EA2948E3ED12B3F7A76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_0F88647E9C324EA2948E3ED12B3F7A76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_0F88647E9C324EA2948E3ED12B3F7A76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_0F88647E9C324EA2948E3ED12B3F7A76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_0F88647E9C324EA2948E3ED12B3F7A76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_0F88647E9C324EA2948E3ED12B3F7A76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_0F88647E9C324EA2948E3ED12B3F7A76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_0F88647E9C324EA2948E3ED12B3F7A76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_0F88647E9C324EA2948E3ED12B3F7A76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_0F88647E9C324EA2948E3ED12B3F7A76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_0F88647E9C324EA2948E3ED12B3F7A76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_0F88647E9C324EA2948E3ED12B3F7A76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_0F88647E9C324EA2948E3ED12B3F7A76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_0F88647E9C324EA2948E3ED12B3F7A76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_0F88647E9C324EA2948E3ED12B3F7A76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_0F88647E9C324EA2948E3ED12B3F7A76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_0F88647E9C324EA2948E3ED12B3F7A76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_0F88647E9C324EA2948E3ED12B3F7A76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_BFBFDEC9C11C4B08AD7CE58D6B9DEAA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_BFBFDEC9C11C4B08AD7CE58D6B9DEAA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
          <bin default-name='true' value='&quot;Accessories, Appliances, Art and 14 more&quot;'>
            <value>&quot;Accessories&quot;</value>
            <value>&quot;Appliances&quot;</value>
            <value>&quot;Art&quot;</value>
            <value>&quot;Binders&quot;</value>
            <value>&quot;Bookcases&quot;</value>
            <value>&quot;Chairs&quot;</value>
            <value>&quot;Copiers&quot;</value>
            <value>&quot;Envelopes&quot;</value>
            <value>&quot;Fasteners&quot;</value>
            <value>&quot;Furnishings&quot;</value>
            <value>&quot;Labels&quot;</value>
            <value>&quot;Machines&quot;</value>
            <value>&quot;Paper&quot;</value>
            <value>&quot;Phones&quot;</value>
            <value>&quot;Storage&quot;</value>
            <value>&quot;Supplies&quot;</value>
            <value>&quot;Tables&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_0F88647E9C324EA2948E3ED12B3F7A76]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Returns' datatype='table' name='[__tableau_internal_object_id__].[Returns_BFBFDEC9C11C4B08AD7CE58D6B9DEAA6]' role='measure' type='quantitative' />
      <group caption='Sub-Category Set 2' name='[Sub-Category Set 2]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='100' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='COUNT([Sub-Category])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Sub-Category]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Sub-Category Set' name='[Sub-Category Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='COUNT([Sub-Category])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Sub-Category]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country, State, City' />
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Sub-Category (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories, Appliances, Art and 14 more&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Envelopes, Fasteners, Furnishings and 7 more&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_0F88647E9C324EA2948E3ED12B3F7A76'>
            <properties context=''>
              <relation connection='excel-direct.01riyle0pygps91c3vo0k1cxlf5o' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Returns' id='Returns_BFBFDEC9C11C4B08AD7CE58D6B9DEAA6'>
            <properties context=''>
              <relation connection='excel-direct.01riyle0pygps91c3vo0k1cxlf5o' name='Returns' table='[Returns$]' type='table'>
                <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
                  <column datatype='string' name='Returned' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Order ID]' />
              <expression op='[Order ID (Returns)]' />
            </expression>
            <first-end-point object-id='Orders_0F88647E9C324EA2948E3ED12B3F7A76' />
            <second-end-point object-id='Returns_BFBFDEC9C11C4B08AD7CE58D6B9DEAA6' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Super Store Sales data' inline='true' name='federated.1s91dt00iyslga18k93ge1q3mt89' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Super Store Sales data' name='excel-direct.0x4i4ia0w2er1n1ed0u9r1aqam6t'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Admin/OneDrive/Desktop/Data Set (4)/Data Set/Super Store Sales data.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0x4i4ia0w2er1n1ed0u9r1aqam6t' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:T11001:no:A1:T11001:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='City' ordinal='8' />
            <column datatype='string' name='State' ordinal='9' />
            <column datatype='string' name='Country' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
            <column datatype='string' name='Product ID' ordinal='12' />
            <column datatype='string' name='Category' ordinal='13' />
            <column datatype='string' name='Sub-Category' ordinal='14' />
            <column datatype='string' name='Product Name' ordinal='15' />
            <column datatype='real' name='Sales' ordinal='16' />
            <column datatype='integer' name='Quantity' ordinal='17' />
            <column datatype='real' name='Discount' ordinal='18' />
            <column datatype='real' name='Profit' ordinal='19' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0x4i4ia0w2er1n1ed0u9r1aqam6t' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:T11001:no:A1:T11001:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='City' ordinal='8' />
            <column datatype='string' name='State' ordinal='9' />
            <column datatype='string' name='Country' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
            <column datatype='string' name='Product ID' ordinal='12' />
            <column datatype='string' name='Category' ordinal='13' />
            <column datatype='string' name='Sub-Category' ordinal='14' />
            <column datatype='string' name='Product Name' ordinal='15' />
            <column datatype='real' name='Sales' ordinal='16' />
            <column datatype='integer' name='Quantity' ordinal='17' />
            <column datatype='real' name='Discount' ordinal='18' />
            <column datatype='real' name='Profit' ordinal='19' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:T11001:no:A1:T11001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_26A7F327CD1245DEA21BAFF226312DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_26A7F327CD1245DEA21BAFF226312DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_26A7F327CD1245DEA21BAFF226312DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_26A7F327CD1245DEA21BAFF226312DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_26A7F327CD1245DEA21BAFF226312DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_26A7F327CD1245DEA21BAFF226312DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_26A7F327CD1245DEA21BAFF226312DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_26A7F327CD1245DEA21BAFF226312DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_26A7F327CD1245DEA21BAFF226312DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_26A7F327CD1245DEA21BAFF226312DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_26A7F327CD1245DEA21BAFF226312DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_26A7F327CD1245DEA21BAFF226312DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_26A7F327CD1245DEA21BAFF226312DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_26A7F327CD1245DEA21BAFF226312DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_26A7F327CD1245DEA21BAFF226312DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_26A7F327CD1245DEA21BAFF226312DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_26A7F327CD1245DEA21BAFF226312DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_26A7F327CD1245DEA21BAFF226312DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_26A7F327CD1245DEA21BAFF226312DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_26A7F327CD1245DEA21BAFF226312DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_26A7F327CD1245DEA21BAFF226312DF6]' role='measure' type='quantitative' />
      <drill-paths>
        <drill-path name='Country, State, City'>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_26A7F327CD1245DEA21BAFF226312DF6'>
            <properties context=''>
              <relation connection='excel-direct.0x4i4ia0w2er1n1ed0u9r1aqam6t' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:T11001:no:A1:T11001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='City' ordinal='8' />
                  <column datatype='string' name='State' ordinal='9' />
                  <column datatype='string' name='Country' ordinal='10' />
                  <column datatype='string' name='Region' ordinal='11' />
                  <column datatype='string' name='Product ID' ordinal='12' />
                  <column datatype='string' name='Category' ordinal='13' />
                  <column datatype='string' name='Sub-Category' ordinal='14' />
                  <column datatype='string' name='Product Name' ordinal='15' />
                  <column datatype='real' name='Sales' ordinal='16' />
                  <column datatype='integer' name='Quantity' ordinal='17' />
                  <column datatype='real' name='Discount' ordinal='18' />
                  <column datatype='real' name='Profit' ordinal='19' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Developing and emerging states'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore (1))' name='federated.1wh51210nnqsco183k9qo0hsv9cu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1wh51210nnqsco183k9qo0hsv9cu'>
            <column caption='Average sales per customer' datatype='real' name='[Calculation_502995829043113986]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG({INCLUDE [Customer Name]:SUM([Sales]) })' />
            </column>
            <column caption='Sales goals' datatype='real' name='[Calculation_502995829043597315]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if MIN([States with 100+ customers])= TRUE THEN SUM([Sales]) &#13;&#10;ELSE 100* [Calculation_502995829043113986]&#13;&#10;END' />
            </column>
            <column caption='Emerging or Developing State' datatype='string' name='[Calculation_502995829044965380]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF COUNTD([Customer Name])&gt;=100 THEN &quot;Developing state&quot; ELSE &#13;&#10;&quot;Emerging state&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;₹&quot;#,##0,.00K;&quot;₹&quot;-#,##0,.00K' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Customer Name]' derivation='CountD' name='[ctd:Customer Name:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_502995829043597315]' derivation='User' name='[usr:Calculation_502995829043597315:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_502995829044965380]' derivation='User' name='[usr:Calculation_502995829044965380:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='10' />
            <format attr='div-level' scope='cols' value='10' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[usr:Calculation_502995829044965380:nk]' />
              <lod column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Sales:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[usr:Calculation_502995829043597315:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' value-column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Sales:qk]' z-order='2' />
            <reference-line axis-column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[usr:Calculation_502995829043597315:qk]' enable-instant-analytics='true' fill-above='true' fill-below='true' formula='average' id='refline1' label-type='none' percentage-bands='true' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Sales:qk]' z-order='1'>
              <reference-line-value percentage='60' />
              <reference-line-value percentage='80' />
            </reference-line>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1wh51210nnqsco183k9qo0hsv9cu].[none:State:nk] / [federated.1wh51210nnqsco183k9qo0hsv9cu].[ctd:Customer Name:ok])</rows>
        <cols>[federated.1wh51210nnqsco183k9qo0hsv9cu].[usr:Calculation_502995829043597315:qk]</cols>
      </table>
      <simple-id uuid='{78C00D5F-66B0-4520-8359-9FBA5B755E08}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore (1))' name='federated.1wh51210nnqsco183k9qo0hsv9cu' />
          </datasources>
          <datasource-dependencies datasource='federated.1wh51210nnqsco183k9qo0hsv9cu'>
            <column caption='Profit Ratio' datatype='real' name='[Calculation_502995829055029254]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column caption='Count Distinct Orders' datatype='integer' name='[Calculation_502995829057662983]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Customer Name]:COUNTD([Order ID])}' />
            </column>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' fiscal-year-start='7' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' default-format='c&quot;₹&quot;#,##0,.00K;&quot;₹&quot;-#,##0,.00K' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_502995829057662983]' derivation='Sum' name='[sum:Calculation_502995829057662983:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_502995829055029254]' derivation='User' name='[usr:Calculation_502995829055029254:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wh51210nnqsco183k9qo0hsv9cu].[usr:Calculation_502995829055029254:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Calculation_502995829057662983:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Quantity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1wh51210nnqsco183k9qo0hsv9cu].[usr:Calculation_502995829055029254:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Calculation_502995829057662983:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Profit:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Quantity:qk]&quot;</bucket>
              <bucket>&quot;[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Sales:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1wh51210nnqsco183k9qo0hsv9cu].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Profit:qk]' value='C1033%' />
            <format attr='text-format' field='[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Sales:qk]' value='C1033%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[Multiple Values]' separate-domains='true' />
              <text column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1wh51210nnqsco183k9qo0hsv9cu].[yr:Order Date:ok] / [federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Sub-Category:nk])</rows>
        <cols>[federated.1wh51210nnqsco183k9qo0hsv9cu].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{19D6E03F-CFFF-4615-8E18-3B0229F0113B}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore (1))' name='federated.1wh51210nnqsco183k9qo0hsv9cu' />
          </datasources>
          <datasource-dependencies datasource='federated.1wh51210nnqsco183k9qo0hsv9cu'>
            <column caption='Average sales per customer' datatype='real' name='[Calculation_502995829043113986]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG({INCLUDE [Customer Name]:SUM([Sales]) })' />
            </column>
            <column caption='Count Distinct Orders' datatype='integer' name='[Calculation_502995829057662983]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Customer Name]:COUNTD([Order ID])}' />
            </column>
            <column caption='Index' datatype='integer' name='[Calculation_502995829057957896]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;₹&quot;#,##0,.00K;&quot;₹&quot;-#,##0,.00K' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_502995829057662983]' derivation='None' name='[none:Calculation_502995829057662983:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_502995829043113986]' derivation='User' name='[usr:Calculation_502995829043113986:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_502995829057957896]' derivation='User' name='[usr:Calculation_502995829057957896:qk:3]' pivot='key' type='quantitative'>
              <table-calc level-address='[federated.1wh51210nnqsco183k9qo0hsv9cu].[Calculation_502995829057662983]' ordering-type='Field'>
                <order field='[federated.1wh51210nnqsco183k9qo0hsv9cu].[Customer Name]' />
                <order field='[federated.1wh51210nnqsco183k9qo0hsv9cu].[Calculation_502995829057662983]' />
                <sort direction='ASC' using='[federated.1wh51210nnqsco183k9qo0hsv9cu].[usr:Calculation_502995829043113986:qk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Calculation_502995829057662983:qk]' included-values='in-range' />
          <slices>
            <column>[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Calculation_502995829057662983:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <lod column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Customer Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1wh51210nnqsco183k9qo0hsv9cu].[usr:Calculation_502995829057957896:qk:3]</rows>
        <cols>([federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Customer Name:nk] * [federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Calculation_502995829057662983:qk])</cols>
      </table>
      <simple-id uuid='{2EACF13A-6917-432A-86FF-58498D109BE2}' />
    </worksheet>
    <worksheet name='Sheet 6 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.0hdrlkf13vkshv1ciiu2202jq7ma' />
          </datasources>
          <datasource-dependencies datasource='federated.0hdrlkf13vkshv1ciiu2202jq7ma'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
                <bin default-name='true' value='&quot;Accessories, Appliances, Art and 14 more&quot;'>
                  <value>&quot;Accessories&quot;</value>
                  <value>&quot;Appliances&quot;</value>
                  <value>&quot;Art&quot;</value>
                  <value>&quot;Binders&quot;</value>
                  <value>&quot;Bookcases&quot;</value>
                  <value>&quot;Chairs&quot;</value>
                  <value>&quot;Copiers&quot;</value>
                  <value>&quot;Envelopes&quot;</value>
                  <value>&quot;Fasteners&quot;</value>
                  <value>&quot;Furnishings&quot;</value>
                  <value>&quot;Labels&quot;</value>
                  <value>&quot;Machines&quot;</value>
                  <value>&quot;Paper&quot;</value>
                  <value>&quot;Phones&quot;</value>
                  <value>&quot;Storage&quot;</value>
                  <value>&quot;Supplies&quot;</value>
                  <value>&quot;Tables&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hdrlkf13vkshv1ciiu2202jq7ma].[Sub-Category (group)]' />
              <lod column='[federated.0hdrlkf13vkshv1ciiu2202jq7ma].[none:Sub-Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0hdrlkf13vkshv1ciiu2202jq7ma].[sum:Profit:qk]</rows>
        <cols>[federated.0hdrlkf13vkshv1ciiu2202jq7ma].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{47B81F2C-6543-4893-BD3C-D59E9BA7CB6A}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.0hdrlkf13vkshv1ciiu2202jq7ma' />
          </datasources>
          <datasource-dependencies datasource='federated.0hdrlkf13vkshv1ciiu2202jq7ma'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category Set]' derivation='InOut' name='[io:Sub-Category Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0hdrlkf13vkshv1ciiu2202jq7ma].[sum:Sales:qk]</rows>
        <cols>[federated.0hdrlkf13vkshv1ciiu2202jq7ma].[io:Sub-Category Set:nk]</cols>
      </table>
      <simple-id uuid='{F0053309-D284-4DB0-AB83-F64656ABC835}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore (1))' name='federated.1wh51210nnqsco183k9qo0hsv9cu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1wh51210nnqsco183k9qo0hsv9cu'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Country:nk]' />
              <geometry column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1wh51210nnqsco183k9qo0hsv9cu].[Latitude (generated)]</rows>
        <cols>[federated.1wh51210nnqsco183k9qo0hsv9cu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F8EAB2A4-5258-4FF1-968E-A8549BF29511}' />
    </worksheet>
    <worksheet name='Sheet 8 (2)'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E0B51B42-5F36-44CB-BA74-D2C275426AAE}' />
    </worksheet>
    <worksheet name='annual sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore (1))' name='federated.1wh51210nnqsco183k9qo0hsv9cu' />
          </datasources>
          <datasource-dependencies datasource='federated.1wh51210nnqsco183k9qo0hsv9cu'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' fiscal-year-start='7' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='c&quot;₹&quot;#,##0,.00K;&quot;₹&quot;-#,##0,.00K' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[yr:Order Date:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Category:nk] * [federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Sales:qk])</rows>
        <cols>([federated.1wh51210nnqsco183k9qo0hsv9cu].[yr:Order Date:ok] / [federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Segment:nk])</cols>
      </table>
      <simple-id uuid='{F437302F-418F-431C-B510-F6F5DBE4F6D1}' />
    </worksheet>
    <worksheet name='filtering'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore (1))' name='federated.1wh51210nnqsco183k9qo0hsv9cu' />
          </datasources>
          <datasource-dependencies datasource='federated.1wh51210nnqsco183k9qo0hsv9cu'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Order ID (Returns)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Order ID]' derivation='CountD' name='[ctd:Order ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Customer Name:nk]'>
            <groupfilter expression='COUNTD([Order ID (Returns)]) &gt;=COUNTD([Order ID])/2' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Customer Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1wh51210nnqsco183k9qo0hsv9cu].[ctd:Order ID:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Customer Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Customer Name:nk]</rows>
        <cols>[federated.1wh51210nnqsco183k9qo0hsv9cu].[ctd:Order ID:qk]</cols>
      </table>
      <simple-id uuid='{61EF6FB4-7457-4C27-A827-EF32FD11711D}' />
    </worksheet>
    <worksheet name='monthly sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Monthly sales</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore (1))' name='federated.1wh51210nnqsco183k9qo0hsv9cu' />
          </datasources>
          <datasource-dependencies datasource='federated.1wh51210nnqsco183k9qo0hsv9cu'>
            <column caption='Profit Ratio' datatype='real' name='[Calculation_502995829055029254]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column datatype='date' fiscal-year-start='7' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' default-format='c&quot;₹&quot;#,##0,.00K;&quot;₹&quot;-#,##0,.00K' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_502995829055029254]' derivation='User' name='[usr:Calculation_502995829055029254:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#dfedeb' />
            <format attr='fill-below' id='refline0' value='#f9e9e0' />
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[usr:Calculation_502995829055029254:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <reference-line axis-column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Sales:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Sales:qk]' z-order='1' />
            <reference-line axis-column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Sales:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Sales:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Sales:qk]</rows>
        <cols>[federated.1wh51210nnqsco183k9qo0hsv9cu].[mn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{DFD81E1C-9CA7-45B1-8C07-9403A64FF3EA}' />
    </worksheet>
    <worksheet name='profit ranked by customer orders'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore (1))' name='federated.1wh51210nnqsco183k9qo0hsv9cu' />
          </datasources>
          <datasource-dependencies datasource='federated.1wh51210nnqsco183k9qo0hsv9cu'>
            <column caption='Count Distinct orders' datatype='integer' name='[Calculation_1104507854509199362]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Customer Name]:COUNTD([Order ID])}' />
            </column>
            <column caption='Index' datatype='integer' name='[Calculation_502995829057957896]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1104507854509199362]' derivation='None' name='[none:Calculation_1104507854509199362:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_502995829057957896]' derivation='User' name='[usr:Calculation_502995829057957896:qk:8]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.1wh51210nnqsco183k9qo0hsv9cu].[Customer Name]' />
                <sort direction='ASC' using='[federated.1wh51210nnqsco183k9qo0hsv9cu].[avg:Profit:qk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1wh51210nnqsco183k9qo0hsv9cu].[usr:Calculation_502995829057957896:qk:8]' field-type='quantitative' major-origin='0' major-spacing='20' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <color column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Profit:qk]' />
              <lod column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Customer Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1wh51210nnqsco183k9qo0hsv9cu].[usr:Calculation_502995829057957896:qk:8]</rows>
        <cols>[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Calculation_1104507854509199362:qk]</cols>
      </table>
      <simple-id uuid='{61D56218-1657-47A9-B9C1-0761E7924353}' />
    </worksheet>
    <worksheet name='q1,1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore (1))' name='federated.1wh51210nnqsco183k9qo0hsv9cu' />
          </datasources>
          <datasource-dependencies datasource='federated.1wh51210nnqsco183k9qo0hsv9cu'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;₹&quot;#,##0,.00K;&quot;₹&quot;-#,##0,.00K' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Profit:qk]' />
              <text column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Category:nk] / [federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Segment:nk])</rows>
        <cols>[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{CFE74C44-5BA3-451B-A6F1-3D9B7A9FB5B5}' />
    </worksheet>
    <worksheet name='q1.2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore (1))' name='federated.1wh51210nnqsco183k9qo0hsv9cu' />
          </datasources>
          <datasource-dependencies datasource='federated.1wh51210nnqsco183k9qo0hsv9cu'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' fiscal-year-start='7' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='c&quot;₹&quot;#,##0,.00K;&quot;₹&quot;-#,##0,.00K' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Sales:qk]</rows>
        <cols>[federated.1wh51210nnqsco183k9qo0hsv9cu].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{160A59BD-D08E-41D1-B3A2-974AD9B7EDF1}' />
    </worksheet>
    <worksheet name='q1.3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore (1))' name='federated.1wh51210nnqsco183k9qo0hsv9cu' />
          </datasources>
          <datasource-dependencies datasource='federated.1wh51210nnqsco183k9qo0hsv9cu'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;₹&quot;#,##0,.00K;&quot;₹&quot;-#,##0,.00K' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Sales:qk]</rows>
        <cols>[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{8C2A4856-51AA-479E-8085-6F6D979B3DC4}' />
    </worksheet>
    <worksheet name='q13.1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.0hdrlkf13vkshv1ciiu2202jq7ma' />
          </datasources>
          <datasource-dependencies datasource='federated.0hdrlkf13vkshv1ciiu2202jq7ma'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
                <bin default-name='true' value='&quot;Accessories, Appliances, Art and 14 more&quot;'>
                  <value>&quot;Accessories&quot;</value>
                  <value>&quot;Appliances&quot;</value>
                  <value>&quot;Art&quot;</value>
                  <value>&quot;Binders&quot;</value>
                  <value>&quot;Bookcases&quot;</value>
                  <value>&quot;Chairs&quot;</value>
                  <value>&quot;Copiers&quot;</value>
                  <value>&quot;Envelopes&quot;</value>
                  <value>&quot;Fasteners&quot;</value>
                  <value>&quot;Furnishings&quot;</value>
                  <value>&quot;Labels&quot;</value>
                  <value>&quot;Machines&quot;</value>
                  <value>&quot;Paper&quot;</value>
                  <value>&quot;Phones&quot;</value>
                  <value>&quot;Storage&quot;</value>
                  <value>&quot;Supplies&quot;</value>
                  <value>&quot;Tables&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hdrlkf13vkshv1ciiu2202jq7ma].[Sub-Category (group)]' />
              <lod column='[federated.0hdrlkf13vkshv1ciiu2202jq7ma].[none:Sub-Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0hdrlkf13vkshv1ciiu2202jq7ma].[sum:Profit:qk]</rows>
        <cols>[federated.0hdrlkf13vkshv1ciiu2202jq7ma].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{48533D9A-BCC5-4EB4-A6B9-81F23D55A7A6}' />
    </worksheet>
    <worksheet name='q4.1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore (1))' name='federated.1wh51210nnqsco183k9qo0hsv9cu' />
          </datasources>
          <datasource-dependencies datasource='federated.1wh51210nnqsco183k9qo0hsv9cu'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' default-format='c&quot;₹&quot;#,##0,.00K;&quot;₹&quot;-#,##0,.00K' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' data-class='total' field='[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Profit:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Profit:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Customer Name:nk]' />
              <text column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Sales:qk]</rows>
        <cols>[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Customer Name:nk]</cols>
      </table>
      <simple-id uuid='{6A3FAD2E-7F2F-49E3-AA7F-4B4262A046F0}' />
    </worksheet>
    <worksheet name='q4.2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore (1))' name='federated.1wh51210nnqsco183k9qo0hsv9cu' />
          </datasources>
          <datasource-dependencies datasource='federated.1wh51210nnqsco183k9qo0hsv9cu'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;₹&quot;#,##0,.00K;&quot;₹&quot;-#,##0,.00K' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Sales:qk]</rows>
        <cols>[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Category:nk]</cols>
      </table>
      <simple-id uuid='{A919AF61-06B9-4B62-AB90-E262A131E825}' />
    </worksheet>
    <worksheet name='q4.3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore (1))' name='federated.1wh51210nnqsco183k9qo0hsv9cu' />
          </datasources>
          <datasource-dependencies datasource='federated.1wh51210nnqsco183k9qo0hsv9cu'>
            <column datatype='real' default-format='c&quot;₹&quot;#,##0,.00K;&quot;₹&quot;-#,##0,.00K' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Sub-Category:nk]' />
              <shape column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Sub-Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Sales:qk]</rows>
        <cols>[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{81163210-3B5A-400F-9EB7-F3538B4E8BFE}' />
    </worksheet>
    <worksheet name='q4.4'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore (1))' name='federated.1wh51210nnqsco183k9qo0hsv9cu' />
          </datasources>
          <datasource-dependencies datasource='federated.1wh51210nnqsco183k9qo0hsv9cu'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' fiscal-year-start='7' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='c&quot;₹&quot;#,##0,.00K;&quot;₹&quot;-#,##0,.00K' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[yr:Order Date:ok]' />
              <text column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Sales:qk]</rows>
        <cols>([federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Category:nk] / [federated.1wh51210nnqsco183k9qo0hsv9cu].[yr:Order Date:ok])</cols>
      </table>
      <simple-id uuid='{A56D5739-7D09-487D-A740-4B816FDFCAB0}' />
    </worksheet>
    <worksheet name='q8.1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.0hdrlkf13vkshv1ciiu2202jq7ma' />
            <datasource caption='Super Store Sales data' name='federated.1s91dt00iyslga18k93ge1q3mt89' />
          </datasources>
          <datasource-dependencies datasource='federated.0hdrlkf13vkshv1ciiu2202jq7ma'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1s91dt00iyslga18k93ge1q3mt89'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1s91dt00iyslga18k93ge1q3mt89].[none:Category:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0hdrlkf13vkshv1ciiu2202jq7ma].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1s91dt00iyslga18k93ge1q3mt89].[none:Category:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1s91dt00iyslga18k93ge1q3mt89].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1s91dt00iyslga18k93ge1q3mt89].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0hdrlkf13vkshv1ciiu2202jq7ma].[sum:Profit:qk] + [federated.1s91dt00iyslga18k93ge1q3mt89].[sum:Profit:qk])</rows>
        <cols>([federated.0hdrlkf13vkshv1ciiu2202jq7ma].[none:Category:nk] / [federated.1s91dt00iyslga18k93ge1q3mt89].[none:Category:nk])</cols>
      </table>
      <simple-id uuid='{25268477-A59B-4643-ABE9-E8F59AEDEE66}' />
    </worksheet>
    <worksheet name='q8.2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.0hdrlkf13vkshv1ciiu2202jq7ma' />
          </datasources>
          <datasource-dependencies datasource='federated.0hdrlkf13vkshv1ciiu2202jq7ma'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0hdrlkf13vkshv1ciiu2202jq7ma].[none:Customer Name:nk] / [federated.0hdrlkf13vkshv1ciiu2202jq7ma].[none:Region:nk])</rows>
        <cols>[federated.0hdrlkf13vkshv1ciiu2202jq7ma].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{786F2E18-CC2C-4D09-A381-8F607F7D7F88}' />
    </worksheet>
    <worksheet name='q8.3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.0hdrlkf13vkshv1ciiu2202jq7ma' />
          </datasources>
          <datasource-dependencies datasource='federated.0hdrlkf13vkshv1ciiu2202jq7ma'>
            <_.fcp.ObjectModelTableType.false...column caption='Orders' datatype='integer' name='[__tableau_internal_object_id__].[Orders_0F88647E9C324EA2948E3ED12B3F7A76]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='Returns' datatype='integer' name='[__tableau_internal_object_id__].[Returns_BFBFDEC9C11C4B08AD7CE58D6B9DEAA6]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_0F88647E9C324EA2948E3ED12B3F7A76]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='Returns' datatype='table' name='[__tableau_internal_object_id__].[Returns_BFBFDEC9C11C4B08AD7CE58D6B9DEAA6]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Orders_0F88647E9C324EA2948E3ED12B3F7A76]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_0F88647E9C324EA2948E3ED12B3F7A76:qk]' pivot='key' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Returns_BFBFDEC9C11C4B08AD7CE58D6B9DEAA6]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Returns_BFBFDEC9C11C4B08AD7CE58D6B9DEAA6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0hdrlkf13vkshv1ciiu2202jq7ma].[__tableau_internal_object_id__].[cnt:Orders_0F88647E9C324EA2948E3ED12B3F7A76:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0hdrlkf13vkshv1ciiu2202jq7ma].[__tableau_internal_object_id__].[cnt:Returns_BFBFDEC9C11C4B08AD7CE58D6B9DEAA6:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0hdrlkf13vkshv1ciiu2202jq7ma].[__tableau_internal_object_id__].[cnt:Orders_0F88647E9C324EA2948E3ED12B3F7A76:qk] + [federated.0hdrlkf13vkshv1ciiu2202jq7ma].[__tableau_internal_object_id__].[cnt:Returns_BFBFDEC9C11C4B08AD7CE58D6B9DEAA6:qk])</rows>
        <cols>[federated.0hdrlkf13vkshv1ciiu2202jq7ma].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{D3E96B4F-901D-42BD-B8B8-3B03953A0B29}' />
    </worksheet>
    <worksheet name='q8.4'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Pivot)' name='federated.1w7wvbi19rpwnm18s4qko15wrr9o' />
          </datasources>
          <datasource-dependencies datasource='federated.1w7wvbi19rpwnm18s4qko15wrr9o'>
            <column datatype='string' name='[Age Group]' role='dimension' type='nominal' />
            <column datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Age Group]' derivation='None' name='[none:Age Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Sum' name='[sum:Pivot Field Values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1w7wvbi19rpwnm18s4qko15wrr9o].[sum:Pivot Field Values:qk]</rows>
        <cols>([federated.1w7wvbi19rpwnm18s4qko15wrr9o].[none:Age Group:nk] / [federated.1w7wvbi19rpwnm18s4qko15wrr9o].[none:Pivot Field Names:nk])</cols>
      </table>
      <simple-id uuid='{C69BA014-54D0-4CDF-A9D8-30123387412D}' />
    </worksheet>
    <worksheet name='sales by sub category'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f'>sales by sub category</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run fontcolor='#f17b79' fontsize='12'>Sum of Sales for each Sub-Category (group).  Color shows details about In / Out of Top and Bottom.  The marks are labeled by Profit Ratio</run>
            <run>.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore (1))' name='federated.1wh51210nnqsco183k9qo0hsv9cu' />
          </datasources>
          <datasource-dependencies datasource='federated.1wh51210nnqsco183k9qo0hsv9cu'>
            <column caption='Profit Ratio' datatype='real' name='[Calculation_502995829055029254]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' default-format='c&quot;₹&quot;#,##0,.00K;&quot;₹&quot;-#,##0,.00K' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
                <bin default-name='false' value='&quot;paper products&quot;'>
                  <value>&quot;Envelopes&quot;</value>
                  <value>&quot;Labels&quot;</value>
                  <value>&quot;Paper&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_502995829055029254]' derivation='User' name='[usr:Calculation_502995829055029254:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' data-class='subtotal' field='[federated.1wh51210nnqsco183k9qo0hsv9cu].[usr:Calculation_502995829055029254:qk]' value='p0%' />
            <format attr='text-format' field='[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Sales:qk]' value='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[io:Set 1:nk]' />
              <tooltip column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[usr:Calculation_502995829055029254:qk]' />
              <text column='[federated.1wh51210nnqsco183k9qo0hsv9cu].[usr:Calculation_502995829055029254:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wh51210nnqsco183k9qo0hsv9cu].[Sub-Category (group)]</rows>
        <cols>[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{C0DAFA11-AEA9-4D85-90DD-D503F7287E5F}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='137'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='129'>
            <card param='[federated.1wh51210nnqsco183k9qo0hsv9cu].[:Measure Names]' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1wh51210nnqsco183k9qo0hsv9cu].[usr:Calculation_502995829055029254:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Calculation_502995829057662983:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Profit:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Quantity:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wh51210nnqsco183k9qo0hsv9cu].[:Measure Names]</field>
            <field>[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Sub-Category:nk]</field>
            <field>[federated.1wh51210nnqsco183k9qo0hsv9cu].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{991FC002-3E88-4E9B-BA17-56B881D9FF9D}' />
    </window>
    <window class='worksheet' name='Developing and emerging states'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wh51210nnqsco183k9qo0hsv9cu].[usr:Calculation_502995829044965380:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{640E6D87-50DB-473B-B31E-ECC9DAEA2971}' />
    </window>
    <window class='worksheet' name='filtering'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5790CE96-56A8-4CC0-875F-A57D03954187}' />
    </window>
    <window class='worksheet' name='annual sales'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wh51210nnqsco183k9qo0hsv9cu].[yr:Order Date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{92E05DAD-F188-4100-B829-9528CB161E77}' />
    </window>
    <window class='worksheet' name='sales by sub category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wh51210nnqsco183k9qo0hsv9cu].[io:Set 1:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{47941B39-095E-46A0-8C3D-02D0B30ADDDD}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Calculation_502995829057662983:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{26A7D61A-5F73-4C16-B52D-573FEBEFE615}' />
    </window>
    <window class='worksheet' name='monthly sales'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{1DB17B3D-290A-489C-9805-6CFC4AEDEEAE}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A0E3E5C5-E269-4D17-B7B8-ED35138CB583}' />
    </window>
    <window class='worksheet' name='profit ranked by customer orders'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6CC2D1A2-F930-4194-9938-0B7955D2C523}' />
    </window>
    <window class='worksheet' name='q1,1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Category:nk]</field>
            <field>[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Customer Name:nk]</field>
            <field>[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Region:nk]</field>
            <field>[federated.1wh51210nnqsco183k9qo0hsv9cu].[sum:Profit:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{343EEFE2-B3A1-46B4-99A3-A3368FB6366D}' />
    </window>
    <window class='worksheet' name='q1.2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Category:nk]</field>
            <field>[federated.1wh51210nnqsco183k9qo0hsv9cu].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C529F4A8-19F4-40EA-AB5C-9CFF060E7A5C}' />
    </window>
    <window class='worksheet' name='q1.3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Category:nk]</field>
            <field>[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7CBDA8C5-34E1-45FA-9B2C-E8B8F0838E16}' />
    </window>
    <window class='worksheet' name='q4.1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Customer Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C2214CD7-C676-4E16-AE6F-83A301EA0578}' />
    </window>
    <window class='worksheet' name='q4.2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{79DF991E-CEE3-43A0-8D84-3D580D77FC85}' />
    </window>
    <window class='worksheet' name='q4.3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Sub-Category:nk]' type='shape' />
            <card pane-specification-id='0' param='[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C7910A73-AC27-418E-B9B2-A7CF7544A1B7}' />
    </window>
    <window class='worksheet' name='q8.1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1s91dt00iyslga18k93ge1q3mt89].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hdrlkf13vkshv1ciiu2202jq7ma].[none:Category:nk]</field>
            <field>[federated.1s91dt00iyslga18k93ge1q3mt89].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BC3E7754-CB5A-4CAA-9DBC-C1478E2D3EAD}' />
    </window>
    <window class='worksheet' name='q8.2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hdrlkf13vkshv1ciiu2202jq7ma].[none:Customer Name:nk]</field>
            <field>[federated.0hdrlkf13vkshv1ciiu2202jq7ma].[none:Region:nk]</field>
            <field>[federated.0hdrlkf13vkshv1ciiu2202jq7ma].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EB13BBA5-2DB8-4DF3-8E36-40F29F0E3978}' />
    </window>
    <window class='worksheet' name='q8.3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hdrlkf13vkshv1ciiu2202jq7ma].[none:Returned:nk]</field>
            <field>[federated.0hdrlkf13vkshv1ciiu2202jq7ma].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{31515A30-7343-4995-9594-0CC291950180}' />
    </window>
    <window class='worksheet' name='q8.4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1w7wvbi19rpwnm18s4qko15wrr9o].[none:Age Group:nk]</field>
            <field>[federated.1w7wvbi19rpwnm18s4qko15wrr9o].[none:Pivot Field Names:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5575F6F0-714D-4B3E-887B-30A450C1E5AC}' />
    </window>
    <window class='worksheet' name='q13.1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0hdrlkf13vkshv1ciiu2202jq7ma].[Sub-Category (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hdrlkf13vkshv1ciiu2202jq7ma].[Sub-Category (group)]</field>
            <field>[federated.0hdrlkf13vkshv1ciiu2202jq7ma].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{534BE532-1DC2-4B94-B637-23DEEAC5798B}' />
    </window>
    <window class='worksheet' name='Sheet 6 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0hdrlkf13vkshv1ciiu2202jq7ma].[Sub-Category (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hdrlkf13vkshv1ciiu2202jq7ma].[Sub-Category (group)]</field>
            <field>[federated.0hdrlkf13vkshv1ciiu2202jq7ma].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{49107584-FAA5-4A81-AB99-7DEED9B92D25}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hdrlkf13vkshv1ciiu2202jq7ma].[io:Sub-Category Set:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FE40D30D-9261-4663-995B-4C4724951B41}' />
    </window>
    <window class='worksheet' name='Sheet 8 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{15FEDC15-8E26-46DF-9006-5735461A4395}' />
    </window>
    <window class='worksheet' name='q4.4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wh51210nnqsco183k9qo0hsv9cu].[yr:Order Date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wh51210nnqsco183k9qo0hsv9cu].[none:Category:nk]</field>
            <field>[federated.1wh51210nnqsco183k9qo0hsv9cu].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A3712F07-DBF6-4E81-8498-CEAE6306D8D4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Developing and emerging states' width='192'>
      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
      AVzONf8DMSUpMGDIdYsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 6 (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO2daZAcx5Xf/1lHV9/HzOAGBhcJkAQJEgBJgCIBEjwgkhKllXV6d72rsHft
      sGPtD/ZHRzjWH9YR/uBwhHfXazks7XpXJ1eUKFESBYqnCRIEQYAACBLEMSAGxwCYwcz0Vd11
      pz80slBdU33NdE/3TOcvAgGgp6c6uyrfy5cv30Hy+TyVZRkAYNs2SqUSbNsGAFBK4UWWZSiK
      AkmSQAgBh7PQkQCgXC6DEALDMOA4DoCZk5/hOA50XUc4HEYoFIIgCPM3Wg6nzUhs8tu2XXPS
      A4AoiojFYgAqQmBZFizLgiAIME2zcjFJQjgchiiK8zJ4DmeukEKhQCVJQrFYdCdyEIIgQJIk
      mKaJWCzmTnxN01zBIYRAFEUkEgkoisLNJE7PI0iSBE3T6k5+oKL1DcOAIAhwHAeiKM5YNSil
      oJSiUCjAsqxOj53DmTMSgKZNFkII4vE4JEmCYRgwDGPmBSUJkiS5ewkOp5dpuIP1mjGEEDiO
      A03TUCwWA9/PBECSpLp7isUIWwE5CwdSLBYpIQS5XG7uFyPEFZhQKOSuFv2wF6CUwjRN6Lru
      CkI0Gu2b779QIdevX6fM79+WC3qEgJlMsiyDnTUsRiil0DQNhUIB3nsZCoWQTqchCMKCEILr
      18exdOmSBTHWdiHNdfKzm8WWfq9HiG2IJUnCwMDAoryxlFLouo58Pg8AVecilmVBVVUkEolu
      Da9pLl8Zw18+/zZWpgTsuX8Ltm29q9tDmhek2f6iV9P77V5mArD3WJYFXddd16hXWBzHgWma
      VddgLle2Oe91wSkUCgBQ9d2AinMhFAp1a1hNYxgGfvjy+yiTOEZyNvJvn8DR4yexZngtntrz
      YM/f/7kwawFoZrPnXQ0Mw4Asy+6ktywLmqbBMIwZ1/LuI6LR6AzB6aUHws4+QqEQwuEwgIrm
      l2XZtf97abwAUCwWUSqXkUwkcO36BF5+5yQuFSQQApDSBLbfOYz9J3OYKJ7Hti0bceSj07g+
      VcSqgSi23LkJK5Yv6/ZXaBtkbGys424LQRBAKYUoiu7q0IyblE2eRCKBSCRS9XovwVa7hcD1
      8Rv4mx+/gnK5BCWaRE4X4AgKwATVKICAgoaSgGMiBB2mmKgoH6OIL+1aiyf37Or212gbs14B
      WoFN9tkejhUKBQiC0LOny704piCKRRX/8PyLmNLioKHlKFkAPEdAlFJAjoMCIAAgyDDJrXgv
      mwg4+dEJrFmxFJtuWw/DMCBJUmWfJ8uIRaML4l5UmejzsQLMBbYKhMNhJJPJBXGDewn2oItF
      Ff/nhddx6eIobDkBWxms+3t+k/OWmUoxIOSwYeUAPjl1BsNrVuD8FGBbJnZvWY49O+/D4OBA
      TwdJmqaJYrFYmU8LRQBkWcbAwEC3h7OgoJTily//DiXdxqmxMqYNGVTLAnIMRAzenPs38nVR
      rwMx736AIkJVbFkVwyMP3I14LArbtjE4OAhFUeb+heaA4ziuUFJKUSwWYVlWbwuAdwMZjUbn
      7E4M2kSzTbgkSQvGX98sr772Bl46fAVOKAmQedTI1AFxDIigcADEJQvf2rcDW+64DdeuXcN7
      H36MK9ez2LRhNXbvvA9Rz/6u3bDny4I4AbhnNpTS3hcA9nc6nZ6TFnEcB9PT0wCAWCyGcDjs
      agJVVd1VRpIkxGKxwI0tE8iFICSGYeC/fe+XGCsruGnRdxXiGIgLZZScMGxya/VZlzLxJ19/
      EslEom33lTlZDMNAsVgEIcR95o7joFgsolwu974AMARBQCQSccOw/ecPXo9SUGAfpRSlUgmq
      qsK2bYRCIQwODsJxHORyOWiaVvV+5q71HxISQpBMJt3NeC8LwkuvvI39J6dB5lPzzwZKkRBK
      eG73Xbhn8wbEYq1tpP2rOqUUlmW5Jg7LY9F13TWDSqWS+3vz4gWaK5RSlMtl6LqOSCQCRVHg
      OI6bvskmqiiKiEajAG4dphFC3E1PPB533bEAarpia4WGU0qRzWYRCoXcM4peNJsopRi5MglC
      FsDjJQQFGsNP3jyNEx+fwe9/ZR8opVAUBaIoQpJqfwempDRNQ/SmByqfz8M0TUiSBEVRoCgK
      VFV1n6k/YLFn7lC9zRczR9iyBgC6rs8Ix2Ya3XtNlr/ANIPXkySKIpLJ5IwVoBEsFLxcLruC
      IMtyzwiCYRjIqjp66PE2xBbC0CzNNU00TYOiKDU9fyzMxrZtWJYFSZJg2zZ0XXcPJVVVhSAI
      gYetjJ65Q7UG6Dc12EQOykUIuqbXjGFpnN4TWkIIJEma1RmFbdsol8swDAOpVAqhUKjrQkAp
      xfFPzmBKl5sIdp8/6t0X14zBrefNhEAQBNf0Zdi2jWKx6CoubzRzJBKBLMtuhmOjedLxWzTX
      CeH/fabNZ3NdwzAwOTmJQqHgmj9slZgLtm0jn8/P2DPMF97T9U/PnsdP3jgNKvRODFIzkx8A
      KGbmU5RKJeRyOViW5f6MKTL/NZgnr1AoNMxwZHR8BZhrgojjOFWrgG3bkGUZgiDMasKxDXEs
      FoPjOCgUCk2tJo2wLAvT09PuHmU+wr8nJ6dw4PAJhBUZkzkVVydVXM45sEi445/diEYKqp65
      68cwDExNTUFRFAiC4O4N/Kt2PB6vWhWamXvzZgIFDYhN7HpxQd4l0ev1mYu2pZRicnISANqq
      tS3LQqFQQKlUQiaT6bgQZHNZvHpyChDkSvgCkXvB41mXVoIo/a+x3HVZlhGJRFy7n70/m826
      7230OUxA58VKbOQybLREMrOHoev6nMfk9R61StD38f7ftm132e4k129kASLeCmTrEfx7Nu+f
      utDmBaRcLldOcj1KtFFNKwZbRURRnJ89QK2Hs1DzZ72+Z3/ONMM0TWSz2Y4JQT5fwPsfngR6
      bOJ7/fHz+Xxr5abUeh8TmHlZARZbsnitE2H/a0wIisVi279/IhHHP/+nX8GapA3Q7lTgCPLQ
      zfVZN1rJvD9v9QwmaFwdF4BGN2WhCUbQQ2d/+001oCIEhUIB09PTVZ6MdowjmUzg3/7B0/jK
      A8sg0bmbha3SbsXmv1KtuePV9t49InutlfF23VO8UFYH5i6tZ/vXQ9d1ZLNZt2pEu4hEItj7
      yIP49r4tCKO1A71exK9IgoTAr3RacTb4r991AegmrW4ca2mjZoPkLMtCLpdruxAQQrB1y2b8
      6688iCgpt+263SRo0lNKIQhC1b6qFWdG0PPpWwHwRpr6X6tF0ANhv9eMMDHtUywW2145jxCC
      DeuGsXfrKtAu7QnmDK2fKstMHlZEgf1hJTsZLE+b/fG+7g+m7FsBqLe01np/0O8yb0Irppxl
      WVVaq52rweYNqwBr/vcD7YCisUnsDWb0vs9xHEiSVHVIys4I6gXU9Uws0EKhXZt5prnK5TJE
      UUQ4HHa101x8+itWLMfeLUMYvZ7DZF5DVBExrgKO2Lmkk3ZB0Jwp6S+lw0yjWu+VZTkwdIIQ
      UhGAltLgOE1TyzfNgvRkWXaP7llSjqIoSCQSs45PCisKvvqFvaCU4n/+3U+xed1y/OboNSwI
      o4g0ty+LRCJVplJQXSl/hIE/mgDwmUDNfHAvxr73Ko32Fl4txMwo1qJKVdVZrSi5XB5Xr16F
      aZoghOCJh7fj9LnzCEkEGamEKC0ATnNBYr2M/97Ishy4dxBF0d0z1KqALgVdsN4HN3vi1q8E
      nREEoaqqG9Tl92Koqup222lmY35uZAT7Xz+A0YICUyvhP/7LL2HJkiW4Y9NG3JgYh3rkIwyv
      WYsHt27CX7/wLgwhNbcv2QW8CoP97b2//vvkv/esm5F/FWhpD7BQfPbdhBDi5p7WS7RhMe1B
      VLR5DpRSRCKRmkKgqioOHnofvzo6AVvIAIKIobiJwcFB9zmtWL4U2+7ehHeOjeCDkSwMsZfr
      lNK6CsSrgP14VwD/PPXGC7ENMrsO3wS3mVgshkgkAl3XG4bm1otZp5S6Cd2RgKoJF0Yv4oe/
      OYhwSIZtO8DNJT6vA7959W3kywZWDqVBHRuvnbiOoq6AhGNt+padJcjKCLLhvbBym2yye/dQ
      XsHxd0DlAtBmWOdMFrHqfxDNQkilJCSrN8rQdR3vHDqKdz4axbgeAzQCeArwGvIA9n9cKdaL
      kWsVm1+ILJjJX0/L1zMHw+Gwmx/M8gb81w2CC0CbKZVKSCaTiMVibqINexj1zgtYiC5L2Qwq
      BVkqlfBX3/0hLpVioHK8sUOCEKBGAaxehNLq7+O32RuF1LPORKZpVhXB8oY++K/BBaDNMLNG
      FEVXE0UiEQiCgHK5DFVVAczUSI7juIW/mDvU/7DC4TDu27oF40cuwqAWKKSeCoduJ96VoBnH
      glfjM2XCzJ2gEO057QG4J6g2zHMjCALS6XTVz9iq4LX9vQ/ENE2kUrU9NIIgYN+jD+HB++7C
      6dNn8cb7n+ByKQIi9/4hVyv4/fe18N47tlqYpuk6DlhIBAD3VNj7RxAEvgK0CiGVCnJBecQs
      Va/e7zJNFRRV2qxCSadSUFUVE3oYROp+/m+7IKT29693v/wxWV4z0msKeVcAZhrN6rixHe5Q
      fxzNQoGVPmEFuBiSJCGdTjdsiseKaTGYUEQikbrC42fP7oexdijc2ARybAhGDhuSGtDj95kN
      Lyi6lh0UBp34epUKOwT0a3v/dd3k+vn7ejOZa9xLN2A3ThAEJJNJtxsMi+VphCzLrp8+n8+7
      K0mr3SQlScLywQTOTkyBCjfrEdkGCLVAiQQBDoggYM+dadx/93Zouo6/fPFDQFq45lKtvQCb
      8I7jIBaLQdO0mv2qe2YTvFAmvt80KZcr8faxWAzxeLxlIfa+P5lMIpfLgRDixga1wj95ejfu
      2zyKT0YuYaqg4f67NmLJQAafXRrD0WMfYc2a1fjS03tx8NAH+OXbnwBir5eXD/b/e/9m1PIO
      OY4DRVFQLBbdEpb+EB72u4QsgAYZvQozg5j2n41Aswdh27Zrr85WMfjDVDRNc3uX2baNH7/0
      Og6e13pa8WxIlPGtLzwy4/VGYQ613s/Ma+/zYSsF+3ff5gPMFUopVFWdVeAag9misiy7gVuz
      xR98F4lE3A6VoijirvXLQHo+UaZ2qHnQn6Cfs/8zD1CjPSYXgDlimmbbsrsopbhwYdR9mMzc
      agfLliwBcRZmogzQXKJM0PtlWcbU1FTge9x8AM7saadJYds2frr/XSwd+hSaaeNGrox/9wef
      Rzwen9X1Xvr1b/DI5x6CJEk4cOQTUHH+XKadyDFhmt3/t/9cyvszAO6eIMhU5QIwRyitdIqf
      qwkDVDxMQwNp5FQdiiziehH4r999CY9uW48lA0ls3XJn3c+wHQeWad5qzi3H8Z+/8xKIIMIS
      Y4Awf4+7E65tdtjln+AMr+3v/RnLCPMegDG4ALSBQqHgNmSYC4Ig4I+++nkAlYf59ntH8erR
      UXw0cg236ya2bqn9u47j4EcvvoJj58bxjcfuRNkW8NpHE7CVznl+2h8R0Fz5TDaJg8Ke/e8N
      wis8XABaJOihsyP4dvQH8GqnPQ/twGAqiuHhNUg0MINGPhvFsbNXocmD+PtXP4GgJEGFznVm
      7Ew4THPX8p8CB2l+72EYCzIMeaJmF50AEEIQCoXauikNgmkflmDBMAzD7ULYTrbcdWdTY7o2
      fgMaDYEQAYgMNjmVZkcn7PubV27qsxn+PQB7zQ+rGGHbdlVq5IxYoIUa5BaLxdzOjoZhIJ/P
      d+w7yLLsHoCxljyWZbk9qrrBdDaHNw9+CNLhVMdGSSntuH69z230fr8rmMFWAW8vMZYdNmMF
      WIhCEAqFIIoiCoVCzTTDuUJIJdUxkUhUaRFWoaBbndEppfjHlw9gnKwAlZrRoXP7rE5Sb5I3
      u+rUEyJJkiCKonsd27arBcC/pATFUfcabLy2bbel00sQoVAIiUQisBGeN+S2Gxw/cQInr+iA
      pHQ9NWC2k/SW+zI42T1o/nm9QfWu6Z3TkiShVCpBEAS3T/SMFSDIrppvWDKILMvuUb6mVY7x
      /YdDbKzeBgmtEvTg2AltOBx2/ce9FkbgOA6OfXwWndX7zdOskgxyYXrxujm9XT69PwNu5Q0E
      bXyDBIZF3Zqm6YafBArAbL/YXCGEIB6PzwgZppQiFAohn89XvT+RSLhl7yils25GEXRCmE6n
      e6LrYz0KhQKujGcBcVnLv9vKRrbRJhOOCVKehBNZAiKIjd8PVE3oW2OpPtTyx/M3ot5q4PUU
      SZLknt0EGq61Yi46jSiKbvqgF0IqSQ7e1kjRaBSxWAzhcLjKvdWOMWQymZ6f/EAlmnT3zm2A
      VW4q1r+ZiRlErfcqVhakNAFZvVLJUb7pHaNmuaXVgI2NmZPeie8fu//9tWA/Z6uI/7uzOdMz
      sUCsaXW9zSSztePxOBKJRNVNaUfcjCiKC0LzMwgheGTnNty/ikLRrzUUgrYpM+ogiTz+zdd2
      4xuPbUZqYAkgRwEQUHUCQv4CULoBlMaB/OWWLs0mP8vo8ke5+qkVJt1MwNy89AhrFqbJa008
      SZLcDuCscTILbTVNs+m+sLWot9HtNHOZmIIg4Jtf/TKSooZQ4TxWKrnqRhkdWME3DTr4V1/b
      g1++dRwvHrqEQkkHyY8CRh4x8zoyEQEPrA1h9+YMiGMA9sxn06z2rmeJ+LV6q38cx+mNgzBF
      URr60QVBcPcGbPJ7a2k2gh2UCYIA0zSr9guyLCOZTLacldUuTp36FLffftus26pevjKGkjQI
      HXlkCzoScRmaAcDWQcpToPEVbRtrUizj8w9vx89eeQ8jOQUgMUCOAakBwCiirBbxxaeexuDg
      IIbXrIFAXsWBw8dgLd0OaDkgnKoc1qFxyIJ3E1xrzxIUCsH+XWvl8P6/6ytAJBJBKpVq6Epk
      XiH2PsuyMDk5WXPyC4LgmkmxWAxDQ0NIp9NIJpMYHBxEMpl0Pz+TyXRt8gNAIpnE8y/8HJcu
      N2cuUEqRLxTwm9cO4K0DBzGQSWN5KgQSHUQptBQTeiXtkRTGQCODbRkjdSxQ28C969KIKApE
      OTQzH1mUQROr8PqbB2AaJo4fP4FTZ0fw7BO7cVu8iAEy7Y4/CE3XMXHjBjRNx6Ejx3Dq07Ou
      EHhLx3tteu9q4aXZZ9nVjDBFUZBOp1t2MVJKUSgUqiY/uzFsgxOPx6Hrultvx39927YxPT3t
      JrJ3G6blmrkPv/rdW3j1gwuwlQEQS8Wf/8k+JJNJ/N0Lv8PxMQsAAShF2hhFFhlAaccJMUWs
      fBF//u//BcaujeOvfnYYJvHEGuk5IJSAdOMEbh9eCoghPLvvcQwMZJCIx0EpxXQ2ix/9fD/O
      TAqQRAKZWAARUHbCIOVxOEoGxNYhwYYpp7B7o4K9D9/v3h9/lGc9l2ezG/6u5gTH4/GWT1Ap
      rSSTl0ol9zVWg0cURRiGAVmW3diPWja9IAjIZDJdO8H108o4Hn/4AZg2weFTl5GIA4ZpQpIk
      fP3pz+HC915C2ZGxYWkUz+5+Dj955QNcaWwh1odSwMjhgXvvRCgUwivvnoBJRYDaACEguQt4
      8sFNCEUSCIu78eFHn+KeO27HurXD7iUIIcik07j/7g14IpXCkqEhN3bq3PkLOPdZBG99moWt
      pAEzi1jpPN47LmIoHcfm2ze4Njt7lkVVReRmIQLvxpZ9lv+gLMjVDXRgBQiHw4jH4zAMA8Vi
      0bXh/IdUsiy7E7BZ7U8pRalUmnEeEI1GkUwmZ5wM1vILLwaYGSRLUlWJFlVVYVoWkjdXvSPH
      TuL/vna2pRKJXrPCcRxI2jjuWZPA73/tOYRCIbx24DDefu8IpjEIoXgFj26/Dc8+vc8NB89m
      s0gkkhDFaqFm8yBoxXUcB5+NXsL5i2NYvXwIb75zGKeuGkglIvhnz+xAJp2C4zgwDANvvfch
      TlxScc9wCvt275gxt4Kee9BKQUiDjDC2cfTCBs/Cf1nHQ1mWQSl1D6eY14a9t1AoVA3Utm3k
      crmq4LJ6UFrJwS0UCu7Y2Bfybh5rBUQtNgghSN3cx3jxR6QyBdOKlquKtTcKeGzrKjywbSsU
      RYFlWTg9MoppO46wPYFvfGkPdmzfXnWv/RXxvNettdIJgoCN69di4/q10HUdp0Yu48z0BLJ2
      FN//7RH84dM7MJBJY+TCRRz6rAzqAJ+cvYDHH7p3RvmTenPA7xqtKQDewC//RVgpalmWkUgk
      ZsRdsA9mnTt0XYeiKG4/rHg8Dk3TEAqFmrK/Ka1UOWCT34s3EYWd7vWCTd8rjN+YAiwNCMmA
      U7G5cdMLQ20TAAURQ6CODVAbRAxVNexYnSS47567sGzZUgCV5zqUimLDygx23Pd5LF26tO1j
      VhQFX3nmMWy9YxT/uP8QxsoRvPruCWzbvAoHTlwExAiImYVqC/j7X7yFP/ryYxBFIdAE8uJ1
      rbqrXJAJJEkSBgYG2hLk5TgO8vm8e7DB7PNWtLNt28jn81X19oGKYDAvEqvHH4vFZu1OXIxc
      Hx/HX3zvd4iEBGxbn8bZy5PIly1o0gCi5YsokSQQiiNsjKMsD80stWgbkGDhT7+4DXfdcTvG
      rl7FyhUrGsbztAtN0/DiKwdx+NQlmKVpCI4J2ygDA7chVLoCI7ERj26KYM+u7U31C/abxjNU
      JXMftmtzSAhxC77O5oaxU15vtxVmmyqK4tr+7CR5MZs9rUIpxcmTH2NlwsayBMEjD2zFE7sV
      aJqO//6D1/CFx3bg7OVpbL9zLQ4cJTgzHaA4BBnLojZWrliK8fFxOL6Ky50mHA7j2b33Y+Ty
      OK6FNoLok7h7vYiT02FkkjGMOxbeOluGbh7BEw9va+pQ0btxrloBunkaGgSllQSXbDY7I/KP
      UorBwcG2xgEtNrxRk2zzyTTggUPHsGHtCqxcvgzvHz2B77/5WUDSPEVEv4r/9Ge/D0II/uZ7
      P8Cq5UN4dt+TSKVm7j86iaqqeP7Xb+H46VGkQxYc2wIVZOimjTJVQJQUvv3UHVi1auWMdkn+
      uewNsKtS88lksifiYJjLq1QqVU1+78/ZRptTG2+AmVepEUKwe9c2rFqxHIQQ5AqlSkSn57kL
      ZgFhcxKP3rcO4XAEP/zJC7ie1aGbDianJuf9u8RiMfzx157GMztvQ9l0IEcSWLk0DVmgENUx
      OI6NQyfPu7VbvfgD6Lzh1e4MCofDXU3sYDBXVz6fr2vTsRgg27abLkzLCWbk8g23aK4gCHDM
      MrasjuPrzz6DRDyOF3+9H6fPnEE4nsa2uzdjw/r1XRknM8/LjgL1Rg6FQhFSNAXHHke8PIpP
      P0vj8tg1rF65vOZZgN9DJACVcIBesZ9VVcX09HTg5Pd+GcdxMDU1hVwuN+dAuH7GsizkCgWA
      naoaRWxfLeGbX3wUum7gb59/GQcOHoaevgtZcTnOfXaxq+PdtfNB3Hf7cojEhmYRhKFBSA1j
      yUASjuPg9UMfu+/1h0kEhU0IzO5vR2GnudLIsxC0wfHWwFxsaJrWlGdjthiGgX/4xRu4UqgY
      AsQs4qsPrcEff+M5JBMJ/PrNwzh+DTBjqwDHwvqEhu333tOx8TSDIAh4du9DIFYZEASkIgJE
      R8PnHtoJSiRcyIo4O3KhKmYoKH7I7S0Qi8V6wvQBKu7OVuP6uxnE1mkuXryITqU7Ukrx27fe
      x9HRMiBHQUERF3VsvftOd3Js27wGwvhxyEYW62N5/OHXn8P6dcONL95hUqkkVi8bAJViKGoO
      nnt8J06NXEFK1kFg4+CHpwCgSgBqQcrlMvW34uwGjuNgenq65cT2RCIxI4VyMdGJcA7LsvDm
      u0fwxgenkUcGgqVi6+oIvrzvEQwODrifZZomXvj5LxFPD+Hpxx/uGacDpRTT09P4i+/8HOuX
      xZGdmsD1vA0BNhKxMApOHN9+5j6sWb1yxgrqDzrsjW8EoFgszqqqg6qqbq7AYmR8fAKCKGDJ
      0NCcr0UpxZWxa/jxy+9hNC8CSCGiXcFTO+9AIh7F0NBg1XvPnhsBdWw8+tD2npn8wM3AukwG
      j25bh4vX8yAAopIN6jiQqAHRzOOnrx/DUw+ouH3DsBumw6jKIeiFFYBSiqmpqZoCUEsLshov
      0WjUbTHKqc3lsav4H8+/gzINA5RCLo7i9/bei/t37JihQFiwXTIglLxXmJyawhv/7yDOnjuL
      VCKBXMlEvlBEoVgCSa8DQlEsi1j42pPbMJDJBPYK6Am7gVLa0JPj3yCz5PWBgYFFq/3bgWma
      +ODohzj0/mG88/4xlB0F1LFB1DFsWB7D1nvuce/f1HQlYUXTdTfYrlcnPwAMDgzguWeewsa1
      q0EBjN+YxPDqlUjGI4BRAHKXcU2P4m9fOoTp6enWo0F7ARaVyA4w2ANRFGVRb4DbQVEt4Ts/
      3o8LUzZkYkEqjWHTiqWwyjk88/UnsXzFcqQ9fYkHMhkAwLlzI7h7y13dGnZLyLKEx/c+hkOH
      P8DI9TJOT1BsXL4UxqUx6KFBED0HyMS1ENihKguH6AkBqJX07M/i9072xer6bBe2beP5l17D
      aE7AsDIBU0ogGo7g8c9tx8qVK5C5OdmDWCiTH7jZU2FoCPlcHkmxhElDQSmvIpVM4FquAKIX
      YSaXoVQqVYXds3nVEybQbHzdjarAsRDqtpUCWSAYhoHp6Wl8//lf4OQnpxDXLmHzuhX41jO7
      kEln8NHJkzh8+IOOVtDuBtu3b4MiCRC1SUyZYQzEJAyGdBBRgigEH4YtCBOoVnJDuVxGJBJp
      aAI5jtMz5xydxHEc/PaNgzj48WU4pUlsvW0F9u68Bzu23YulS5dCFEWsHR7G+4c/gEAIxicm
      sHxZ6xXlepVNt9+GXbt24cC77yJnlLFnzz6c+vQ03j/5GR7busJtM8WiCVzHSi94gWzbxsTE
      RFPamsX6S5KEVCrVVCZZP+wTjhz/GD949WOsSstYkQnjwXs3Y+3wMGS5WsextNJO9DLoNqZp
      4tKlyyiVy9h0s8zM1WvXEFYUmKYJQRCqrA1KKUipVKKKosw4SGKt6edjo+k4DjvmuxgAAAfh
      SURBVG7cuFHXFCKEuM2pva/1O6qqYmLiBkRJxo3pHO67+w4QQlAoFDE5eQPr1q3r9hC7imVZ
      yOfzrpfR71SRcrkcJEkKLA+iqqqbzNJJCCFuFYdasFInfNJXHuK5kfMVF+eHx3Hb+rVIpZLY
      ds+tzWsiEUciMbvukgsVy7Kgqqqbj84OwERRrHKzM2VPCIHEfPCqqs7IBAuHw/NiQzMB8Ba/
      9dNLJ5HdgmkvwzDwv3/4K0hOCf/hz/4UQ204JV4MsOxBloXIciC8k98bBlFVHp0FocVvFjHS
      dR2qqiKTyczLJrLRBF9sXotWoZTijXePYnR0FMsGk1iWieD3nvkin/weRFF0K5WwOcsSZJjJ
      451HkiTdEgC2OWIZRKz2Disu1Wm86XpeCCGIRqN96/dnh38fnTqLjz89g327K5XSntn3BDcH
      fbC5wvavbAVIJBKwLMu1dNg8syyrWgCAmZq4k/HoXoIEQFGUqiYY8/HALcuCYRhdD69gKaG/
      feV3+NIXv4Dxq1fw7W8+17Bdaj/D6lgxc5p1GmK9wURRRLFYdHu6UUpvJcUz+zKTybjlB4Fb
      tfg7TVBAnLfi23wzH+5Tf9tO9mAKhQI+PX0GGzasRyQc7rowLjRYvzhWDdwb3q2qatVec8ZJ
      MOvEwjTxfJkeQVXoFtspLrM/mYL56+981819Hh8fx5mz5wBUzjru37EdgzzQb1YIgoBQKDSj
      ZZYkSW4LLvc1oLrUiG3bVb7S+dS+/r1GNw/oWj1gC1oxLl8Zw0AmjVwuj7GxMUxOTWHDhvXI
      5/P47MJFPLzrARz98BgIgF27dmLJkiUAuvu9FwMs5dFvzrP9rdfcrnqHLMuIxWLuKuA4DjRN
      m7c6QV6Nn0gkXBtuoWGaJq5cuYJsQcXp06dBQTA9ncX6dWuwft06iKKI7du2dXuYixo22YNe
      Z52GSqVSRQDYxGNFsWRZhqZpKJfLKJfL83YAxRqksWWqlyd/UN1JxtWrV7FmzRqsE0UAW+Z5
      ZJxGMBOpSgAIIVWanh2I2bbt9lTtJKzC9EJqUleL4eHuJ45z6sPmu8DsfeYqAm6VJGT/ZvuC
      TsFOo23bXrBmD2fhoGkastlspWBzUEMJAFX202yS1VtB13VYltUXYcuc7sPOClRVveUGrRdq
      wDbEnYKVOeeanzMfCIKAZDJZMYHYi36Xnnc1MAyjowLAJz9nPmGnw5lM5pYA+De5TACY37QT
      ZhCL2eBw5hv3TIBpXu8pLAsUEkURg4ODVQ0F2slirebGWRi4+QDekFEArtdnNu2MOJyFhKuC
      vcfGTCC4bc5Z7AisybS/g0goFHK7L3I4ixUhHo8jHA7P0PS2bXPtz1n0CEE2PtsE92NhKU5/
      IdTT8sVisW1hEFyQOL1IoB/SexBWKpX45OUsWgJLMTiOg0gkglgsBsMw2hINyvcTnF4kUAAI
      IQiHw5BleVYBaiy6U5IkftjF6WkCBcCbmtjqBGah1I7jzEs5FQ5nLsyY3WwCt2L3s87umqYB
      qAhQkGuVw+k1AgWgUCggn883FQHKzB1d112N7y1FweH0MjMEgEXJsXzgRiuBZVkQBAHhcLgn
      mm1zOK1Q0w0KAIVCIVAIHMdxawf5A+k4nIVE3Yq0juMgl8vBsizXpme1KlnwHE9j5CxkZgiA
      aZpVyS+O40BVVXclSKVSbuI61/qchY4rAKyJsD/0wd9VjwXJ8cnPWQy4AmCaJrLZrDu52URn
      5wDMBOK+fc5iQgIqdVJKpRKAiqZXFMU1eQghbrEqBtf+nMWCBFS0vyiKiMVibnnCSCSCQqHg
      dt3gk56zGJGAinkzNTXldtNgsUCsxDSf/JzFigBUTm6j0SgikUjVBpgVEeVwFiuuAIRCIZim
      OaOpAIezmJGAiguUbXq9zcU4nMWOBFTieVibVEIIFEXhpg+nL6iKBWKlCkulUt/35eX0BwIw
      06/P63Vy+oWqFYCnL3L6DQG4Vf6chTfzbC5OvyCwjuQsBigSifA2RZy+QdB1HaZpuvVAE4kE
      j/Hn9A2CpmlV2p6HOnP6CcHr7uQV4Dj9xgwvENf+nH5CYCVQWAQoFwBOPyHouu5meoXD4W6P
      h8OZVySW5C6KIt8DcPoOKR6PIxqNuq5QDqefEKLRqHsAxgWA029IgiC4zfC4AHD6DQngE5/T
      v/DwT05fwwWA09dwAeD0NVwAOH0NFwBOX8MFgNPXcAHg9DVcADh9DRcATl/DBYDT13AB4PQ1
      XAA4fQ0XAE5fwwWA09dwAeD0NVwAOH0NFwBOX8MFgNPXcAHg9DVcADh9DRcATl/DBYDT13AB
      4PQ1XAA4fQ0XAE5fwwWA09dwAeD0NVwA+gzTNHHgvQ9QKpW7PZSegAtAH2HbNi6MXoQkChBF
      AZRSjF29Bsuyuj20rkHK5TLlrZH6E9tx8KOfvYy7N61FPBbBkqElSKWS3R7WvMIFgANKKV57
      /Q2MXRvHwJLlePbJPRCE/jAOuABwANw0jy6MgoJgyZJBpJL9sRL0h5hzGiKKIjZu3IBMJoX/
      8r9ewP63DvVF00QuAJwqro/fQElMY//h87h0Zazbw+k4UrcHwOkt1q5Zhc1DJ7Hv4Z1Ys2pl
      t4fTcfgegDMDx3H6ZhPcH9+S0xL9MvkBLgCcPocLAKev4QLA6Wu4AHD6Gi4AnL6GCwCnr+EC
      wOlruABw+hrJNM1uj4HD6Rr/H3+F6YnSheEEAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 8 (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='annual sales' width='192'>
      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
      a/4/MBT4/cwSeU0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='filtering' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='monthly sales' width='192'>
      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
      BkAqav8fszCjFqJftMwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='profit ranked by customer orders' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='q1,1' width='192'>
      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
      PsHHSfIYWkoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='q1.2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='q1.3' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='q13.1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='q4.1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='q4.2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='q4.3' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='q4.4' width='192'>
      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
      fgIiZwdTDJPEhQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='q8.1' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='q8.2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='q8.3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='q8.4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='sales by sub category' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
